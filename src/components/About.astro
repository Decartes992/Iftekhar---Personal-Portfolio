---
/**
 * About.astro (Corrected & Enhanced)
 *
 * @module About
 * @description This version is fully corrected to prevent SSR errors by using the `client:only` directive
 * for all interactive React components. It also features a complete visual redesign and removes hardcoded colors.
 */

// SECTION: Imports
import { resumeData } from '../data/aboutData.ts';
import type { Skill, TimelineEntry, Achievement } from '../data/aboutData.ts';
import SkillRadarChart from './SkillRadarChart.jsx';
import AnimatedTimeline from './AnimatedTimeline.jsx';
import AchievementBadge from './AchievementBadge.jsx';

// SECTION: Data Transformations
const achievements: Achievement[] = resumeData.achievements;
const skillsForChart: { name: string; level: number }[] = resumeData.skills;

const skillsByCategory = resumeData.skills.reduce((acc, skill) => {
  if (!acc[skill.category]) {
    acc[skill.category] = [];
  }
  acc[skill.category].push(skill);
  return acc;
}, {} as Record<Skill['category'], Skill[]>);

const categoryOrder: Skill['category'][] = [
  'Programming Languages',
  'Frameworks/Libraries',
  'Tools/Platforms',
  'Hardware',
  'Software',
  'Methodologies',
];

interface TimelineItem {
  date: string;
  title: string;
  description: string;
  technologies: string[];
}
const allJourneyEntries: TimelineEntry[] = [...resumeData.workExperience, ...resumeData.academicProjects];
const sortedJourneyEntries = allJourneyEntries.sort((a, b) => {
  const getYear = (dateStr: string): number => {
    const match = dateStr.match(/(\d{4})|Present/);
    if (!match) return 0;
    return match[0] === 'Present' ? new Date().getFullYear() : parseInt(match[0], 10);
  };
  return getYear(b.period) - getYear(a.period);
});
const journeyForTimeline: TimelineItem[] = sortedJourneyEntries.map(entry => ({
  date: entry.period,
  title: `${entry.role} at ${entry.entity}`,
  description: entry.points.join(' '),
  technologies: entry.technologies || []
}));
---

<!-- SECTION: HTML Template -->
<section class="relative py-20 md:py-28 bg-background-alt overflow-hidden" id="about" aria-labelledby="about-headline">
  <!-- Decorative background shapes -->
  <div class="absolute top-0 left-0 -translate-x-1/3 -translate-y-1/3">
    <div class="w-96 h-96 bg-primary/5 dark:bg-primary/10 rounded-full filter blur-3xl"></div>
  </div>
  <div class="absolute bottom-0 right-0 translate-x-1/3 translate-y-1/3">
    <div class="w-96 h-96 bg-secondary/5 dark:bg-secondary/10 rounded-full filter blur-3xl"></div>
  </div>

  <div class="relative container mx-auto px-4 sm:px-6 lg:px-8">
    <div class="text-center" data-aos="fade-up">
      <h2 id="about-headline" class="text-4xl md:text-5xl font-bold text-text tracking-tight">
        More About <span class="text-primary">Me</span>
      </h2>
      <p class="mt-4 max-w-2xl mx-auto text-lg text-text-muted">
        A glimpse into my background, skills, and professional journey.
      </p>
    </div>

    <!-- Profile & Bio Section -->
    <div class="mt-16 grid grid-cols-1 lg:grid-cols-12 gap-8 lg:gap-12 items-center">
      <div class="lg:col-span-5" data-aos="fade-right">
        <div class="relative mx-auto w-fit">
           <img
            src="/images/iftekhar_photo.jpg"
            alt="Profile portrait of Iftekhar"
            loading="lazy"
            class="relative z-10 rounded-2xl w-64 h-64 md:w-80 md:h-80 object-cover border-4 border-background shadow-2xl"
          />
          <div class="absolute -inset-2 bg-gradient-to-r from-primary to-secondary rounded-2xl blur-lg opacity-60 animate-pulse-slow"></div>
        </div>
      </div>
      <div class="lg:col-span-7 text-text-muted text-lg" data-aos="fade-left" data-aos-delay="100">
        <p class="mb-4 leading-relaxed">
          I'm an Electrical Engineering student at Dalhousie University with a specialized focus in Computer Engineering. I am driven by a passion for bridging the gap between hardware and software, creating tangible solutions through technology.
        </p>
        <p class="leading-relaxed">
          My experience spans from low-level embedded systems programming for satellites to building modern, interactive web applications. I thrive in environments where I can tackle complex problems.
        </p>
        <div class="mt-8 grid grid-cols-1 sm:grid-cols-3 gap-4">
          {achievements.map((badge, index) => (
            <div data-aos="fade-up" data-aos-delay={index * 100}>
              {/* FIX: Use client:only="react" to prevent SSR crash */}
              <AchievementBadge client:only="react" icon={badge.icon} title={badge.title} description={badge.description} color={badge.color} />
            </div>
          ))}
        </div>
      </div>
    </div>

    <!-- Skills Section -->
    <div class="mt-20 md:mt-28">
      <h3 class="text-3xl font-bold text-center mb-12 text-text" data-aos="fade-up">Skills & Expertise</h3>
      <div class="grid lg:grid-cols-12 gap-8 md:gap-12 items-center">
        <div class="lg:col-span-7 space-y-6" data-aos="fade-right">
          {categoryOrder.map(category => (
             <div class="bg-background p-4 rounded-lg shadow-sm border border-border">
               <h4 class="font-semibold text-primary mb-3">{category}</h4>
               <div class="flex flex-wrap gap-2">
                 {skillsByCategory[category].map(skill => (
                   <span class="bg-background-alt text-text text-sm font-medium px-3 py-1 rounded-full border border-border">
                     {skill.name}
                   </span>
                 ))}
               </div>
             </div>
           ))}
        </div>
        <div class="lg:col-span-5" data-aos="fade-left" data-aos-delay="100">
           <div class="bg-background p-6 rounded-xl shadow-lg border border-border">
             {/* FIX: Use client:only="react" and remove hardcoded color props */}
             <SkillRadarChart
               client:only="react"
               skills={skillsForChart}
               primaryColor="rgb(59, 130, 246)"
               backgroundColor="rgba(59, 130, 246, 0.1)"
               height={400}
               animationDuration={1500}
               showLegend={false}
             />
           </div>
        </div>
      </div>
    </div>

    <!-- Journey Section -->
    <div class="mt-20 md:mt-28" data-aos="fade-up">
      <h3 class="text-3xl font-bold text-center mb-12 text-text">My Journey</h3>
      <div class="max-w-4xl mx-auto bg-background p-6 sm:p-8 rounded-xl shadow-lg border border-border">
        {/* FIX: Use client:only="react" */}
        <AnimatedTimeline client:only="react" items={journeyForTimeline} />
      </div>
    </div>
  </div>
</section>
