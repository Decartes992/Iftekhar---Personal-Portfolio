---
/**
 * Contact Form Component
 *
 * Renders a contact form with fields for name, email, and message.
 * Includes Netlify form handling, honeypot spam prevention, and client-side submission.
 *
 * @component
 *
 * @example
 * <ContactForm />
 *
 * @see {@link https://docs.astro.build/en/guides/integrations-guide/netlify/#forms Netlify Forms}
 */
--- {/* Removed unused import */}

<section class="contact-section" id="contact" aria-labelledby="contact-headline">
  <div class="container">
    <h2 id="contact-headline" class="section-title">Get In Touch</h2>
    <p class="contact-intro">{/* Optional intro text: e.g., "Have a question or want to work together?" */}</p> {/* Added intro text placeholder */}
    {/* @ts-ignore */} {/* Ignore TypeScript error for custom 'netlify' attribute */}
    <form class="contact-form" name="contact" method="POST" netlify> {/* Added netlify attribute */}
      {/* Honeypot field for Netlify spam prevention */}
      <p class="hidden">
        <label>Don’t fill this out if you’re human: <input name="bot-field" /></label>
      </p> {/* Added honeypot field */}
      <input type="hidden" name="form-name" value="contact" />
      <div class="form-group">
        <label for="name">Name</label>
        <input type="text" id="name" name="name" required autocomplete="name" /> {/* Added autocomplete */}
      </div>
      <div class="form-group">
        <label for="email">Email</label>
        <input type="email" id="email" name="email" required autocomplete="email" inputmode="email" /> {/* Added autocomplete and inputmode */}
      </div>
      <div class="form-group">
        <label for="message">Message</label>
        <textarea id="message" name="message" rows="5" required></textarea>
      </div>
      <div class="form-submit">
        <button type="submit" class="btn btn-primary">Send Message</button> {/* Assuming global button styles exist */}
      </div>
    </form>
    {/* Optional: Add social media links/icons below form */}
    <div class="social-links">
      <p>Connect with me:</p>
      {/* Add social media links here */}
      {/* Example: <a href="YOUR_LINKEDIN_URL" target="_blank" rel="noopener noreferrer" aria-label="LinkedIn Profile">LinkedIn</a> */}
    </div> {/* Added social links placeholder */}
    <script>
      const form = document.querySelector('.contact-form') as HTMLFormElement; // Assert type
      if (form) {
        form.addEventListener('submit', (event: SubmitEvent) => {
          event.preventDefault();
          const formData = new FormData(form);
          fetch('/api/contact', {
            method: 'POST',
            body: formData,
          })
            .then((response) => {
              if (response.ok) {
                console.log('Message sent successfully!');
                // TODO: Add visual success feedback
              } else {
                console.error('Failed to send message.');
                // TODO: Add visual error feedback
              }
            })
            .catch((error) => {
              console.error('Error submitting form:', error);
              // TODO: Add visual error feedback
            });
        });
      }
    </script>
  </div>
</section>

<style>
  .contact-section {
    padding-block: clamp(3rem, 10vh, 5rem);
  }
  .container {
    max-width: 700px;
        margin-inline: auto;
        padding-inline: 1rem;
      }
      .section-title {
        text-align: center;
        margin-bottom: 1rem;
        font-size: var(--fs-3);
      }
      .contact-intro { /* Style for intro text */
        text-align: center;
        margin-bottom: 2rem;
        font-size: var(--fs-0);
        color: var(--clr-text-muted, var(--clr-text-current));
      }
      .contact-form {
        display: grid;
        gap: 1.5rem;
      }
      .form-group label {
        display: block;
        margin-bottom: 0.5rem;
        font-weight: 600;
        font-size: var(--fs--1);
      }
      .form-group input,
      .form-group textarea {
        width: 100%;
        padding: 0.8rem 1rem;
        border: 1px solid var(--clr-border-current, #ccc);
        border-radius: 6px;
        font-size: var(--fs-base);
        background-color: var(--clr-bg-input-current, white);
        color: var(--clr-text-current);
        line-height: var(--lh-base);
        transition: border-color 0.3s ease, box-shadow 0.3s ease; /* Add transitions */
      }
      .form-group input:focus,
      .form-group textarea:focus {
        outline: none;
        border-color: var(--clr-primary);
        box-shadow: 0 0 0 3px rgba(var(--clr-primary-rgb, 59, 130, 246), 0.3); /* Subtle focus ring */
      }
      .form-group textarea {
        resize: vertical;
        min-height: 120px;
      }
      .form-submit {
            justify-self: center;
            margin-top: 1rem;
  }
  .social-links { /* Style for social links */
    text-align: center;
    margin-top: 3rem;
    padding-top: 1.5rem;
    border-top: 1px solid var(--clr-border-current, #e5e7eb);
  }
  .social-links p {
    margin-bottom: 1rem;
    font-weight: 600;
  }
  .social-links a {
    margin-inline: 0.75rem;
    color: var(--clr-text-muted, var(--clr-text-current));
    text-decoration: none;
    transition: color 0.2s ease;
    display: inline-flex;
    align-items: center;
    gap: 0.3rem;
  }
  .social-links a:hover,
  .social-links a:focus {
    color: var(--clr-primary);
    text-decoration: underline;
  }
  .hidden { /* For honeypot */
    display: none;
  }
</style>