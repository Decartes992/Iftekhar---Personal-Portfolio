---
import BaseLayout from '../../layouts/BaseLayout.astro';
import { getEntryBySlug, type CollectionEntry } from 'astro:content';
import { Image } from 'astro:assets';

export const prerender = true;

export async function getStaticPaths() {
  const { getCollection } = await import('astro:content');
  const blogEntries: CollectionEntry<'blog'>[] = await getCollection('blog');
  return blogEntries.map(entry => ({
    params: { slug: entry.slug },
    props: { post: entry }, 
  }));
}

interface Props {
  post: CollectionEntry<'blog'>;
}

const { post } = Astro.props;

if (!post) {
  return Astro.redirect('/404');
}

const { Content, headings } = await post.render();

const postDate = post.data.pubDate || post.data.date;
const formattedDate = postDate 
  ? new Date(postDate).toLocaleDateString('en-US', { year: 'numeric', month: 'long', day: 'numeric' })
  : 'No publication date';

const author = post.data.author || "Iftekhar"; // Default to site owner
const category = post.data.category;

// Table of Contents Generation
const toc = headings.filter(h => h.depth <= 3); // Include h1, h2, h3

---

<BaseLayout title={post.data.title} description={post.data.description} openGraph={{
  type: 'article',
  title: post.data.title,
  description: post.data.description,
  image: post.data.image ? Astro.url.origin + (typeof post.data.image === 'string' ? post.data.image : post.data.image.src) : undefined,
  article: {
    publishedTime: postDate ? new Date(postDate).toISOString() : undefined,
    authors: [author],
    tags: post.data.tags,
  }
}}>
  <div class="flex flex-col lg:flex-row gap-8 xl:gap-12 max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-12 md:py-16">
    <!-- Main Content Area -->
    <article class="w-full lg:w-3/4 lg:max-w-3xl mx-auto">
      <header class="mb-10 md:mb-14">
        <h1 class="text-4xl md:text-5xl lg:text-6xl font-bold text-text-headings dark:text-text-dark-headings mb-6 leading-tight tracking-tight" data-aos="fade-down">
          {post.data.title}
        </h1>
        <div class="text-sm text-text-muted dark:text-text-dark-muted mb-6 flex flex-wrap items-center gap-x-4 gap-y-2" data-aos="fade-up" data-aos-delay="100">
          <span>Published: {formattedDate}</span>
          <span class="hidden sm:inline">•</span>
          <span>By: {author}</span>
          {category && 
            <>
              <span class="hidden sm:inline">•</span>
              <span>In: <a href={`/blog/category/${category.toLowerCase().replace(/\s+/g, '-')}/`} class="hover:underline text-primary-600 dark:text-primary-400">{category}</a></span>
            </>
          }
        </div>
        {post.data.tags && post.data.tags.length > 0 && (
          <div class="flex flex-wrap gap-2" data-aos="fade-up" data-aos-delay="200">
            {post.data.tags.map(tag => (
              <a href={`/blog/tags/${tag.toLowerCase().replace(/\s+/g, '-')}/`} class="text-xs bg-tag-bg dark:bg-tag-dark-bg text-tag-text dark:text-tag-dark-text px-3 py-1.5 rounded-full font-medium hover:bg-primary-500 dark:hover:bg-primary-400 hover:text-white dark:hover:text-gray-900 transition-colors duration-200">
                #{tag}
              </a>
            ))}
          </div>
        )}
      </header>

      {post.data.image && (
        <div class="mb-10 md:mb-12 rounded-xl overflow-hidden shadow-xl aspect-video bg-gray-100 dark:bg-gray-800" data-aos="zoom-in">
          <Image src={post.data.image} alt={post.data.title} width={1200} height={675} class="w-full h-full object-cover transition-transform duration-500 hover:scale-105" />
        </div>
      )}

      <div class="prose dark:prose-invert max-w-none 
                  prose-headings:text-text-headings dark:prose-headings:text-text-dark-headings 
                  prose-p:text-text-base dark:prose-p:text-text-dark-base 
                  prose-a:text-primary-600 dark:prose-a:text-primary-400 
                  prose-strong:text-text-strong dark:prose-strong:text-text-dark-strong 
                  prose-blockquote:border-primary-500 dark:prose-blockquote:border-primary-400 
                  prose-code:bg-bg-code dark:prose-code:bg-bg-dark-code 
                  prose-code:text-text-code dark:prose-code:text-text-dark-code 
                  prose-pre:bg-bg-code dark:prose-pre:bg-bg-dark-code 
                  prose-pre:text-text-code dark:prose-pre:text-text-dark-code 
                  lg:prose-lg xl:prose-xl mx-auto leading-relaxed" 
           data-aos="fade-up" data-aos-delay="300">
        <Content />
      </div>

      <nav class="mt-16 md:mt-20 pt-10 border-t border-border dark:border-border-dark text-center" aria-label="Blog post navigation">
        <a href="/blog" class="inline-flex items-center gap-2 text-primary-600 dark:text-primary-400 hover:underline font-medium group">
          <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" class="w-5 h-5 transition-transform duration-200 group-hover:-translate-x-1">
            <path fill-rule="evenodd" d="M17 10a.75.75 0 01-.75.75H5.56l2.72 2.72a.75.75 0 11-1.06 1.06l-4-4a.75.75 0 010-1.06l4-4a.75.75 0 011.06 1.06L5.56 9.25H16.25A.75.75 0 0117 10z" clip-rule="evenodd" />
          </svg>
          Back to Blog Index
        </a>
      </nav>
    </article>

    <!-- Sidebar / Table of Contents -->
    {toc.length > 0 && (
      <aside class="w-full lg:w-1/4 lg:sticky lg:top-24 h-max mt-12 lg:mt-0" data-aos="fade-left" data-aos-delay="400">
        <div class="p-6 bg-bg-alt dark:bg-bg-dark-alt rounded-xl shadow-sm">
          <h2 class="text-xl font-semibold text-text-headings dark:text-text-dark-headings mb-4">Table of Contents</h2>
          <ul class="space-y-2">
            {toc.map(item => (
              <li key={item.slug} class={`${item.depth === 3 ? 'ml-4' : ''}`}>
                <a 
                  href={`#${item.slug}`} 
                  class="text-text-secondary dark:text-text-dark-secondary hover:text-primary-600 dark:hover:text-primary-400 transition-colors duration-200 text-sm leading-relaxed"
                >
                  {item.text}
                </a>
              </li>
            ))}
          </ul>
        </div>
      </aside>
    )}
  </div>
</BaseLayout>

<style is:global>
  .prose h1,
  .prose h2,
  .prose h3,
  .prose h4,
  .prose h5,
  .prose h6 {
    color: var(--color-text-headings) !important;
    scroll-margin-top: 4rem; /* Offset for sticky header */
  }
  .dark .prose h1,
  .dark .prose h2,
  .dark .prose h3,
  .dark .prose h4,
  .dark .prose h5,
  .dark .prose h6 {
    color: var(--color-text-dark-headings) !important;
  }

  .prose a {
    color: var(--color-primary-600);
    text-decoration: none;
    font-weight: 500;
  }
  .prose a:hover {
    text-decoration: underline;
    text-decoration-color: var(--color-primary-500);
  }
  .dark .prose a {
    color: var(--color-primary-400);
  }
  .dark .prose a:hover {
    text-decoration-color: var(--color-primary-300);
  }

  .prose strong {
    color: var(--color-text-strong);
  }
  .dark .prose strong {
    color: var(--color-text-dark-strong);
  }

  .prose blockquote {
    border-left-color: var(--color-primary-500);
    color: var(--color-text-secondary);
    font-style: italic;
    padding-left: 1em;
  }
  .dark .prose blockquote {
    border-left-color: var(--color-primary-400);
    color: var(--color-text-dark-secondary);
  }

  .prose code:not(pre code) {
    background-color: var(--color-bg-code) !important;
    color: var(--color-text-code) !important;
    padding: 0.2em 0.4em;
    margin: 0;
    font-size: 0.875em; /* Slightly smaller for inline code */
    border-radius: 6px;
    font-weight: 500;
  }
  .dark .prose code:not(pre code) {
    background-color: var(--color-bg-dark-code) !important;
    color: var(--color-text-dark-code) !important;
  }

  .prose pre {
    background-color: var(--color-bg-code) !important;
    color: var(--color-text-code) !important;
    border: 1px solid var(--color-border-subtle);
    border-radius: 0.5rem;
    padding: 1.25rem;
    overflow-x: auto;
    box-shadow: var(--shadow-sm);
  }
  .dark .prose pre {
    background-color: var(--color-bg-dark-code) !important;
    color: var(--color-text-dark-code) !important;
    border-color: var(--color-border-dark-subtle);
  }
  .prose pre code {
    background-color: transparent !important; 
    padding: 0;
    margin: 0;
    font-size: inherit;
    border-radius: 0;
    font-weight: normal;
    color: inherit !important; /* Ensure pre code inherits color from pre */
  }

  .prose img {
    border-radius: 0.75rem; /* More rounded corners for images */
    box-shadow: var(--shadow-lg);
    margin-top: 2em;
    margin-bottom: 2em;
  }

  .prose hr {
    border-color: var(--color-border-subtle);
  }
  .dark .prose hr {
    border-color: var(--color-border-dark-subtle);
  }
</style>