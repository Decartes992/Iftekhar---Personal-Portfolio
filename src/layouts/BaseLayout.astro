---
/**
 * Base layout component for all pages
 *
 * @module BaseLayout
 * @description Provides the common structure for all pages including head, header, main content, and footer.
 * Handles theme initialization and page transitions.
 *
 * @prop {string} title - Page title
 * @prop {string} [description='Iftekhar - Personal Portfolio'] - Page meta description
 *
 * @example
 * <BaseLayout title="Home">
 *   <!-- page content -->
 * </BaseLayout>
 */
import '../styles/global.css'; // Import global styles
import { ViewTransitions } from 'astro:transitions'; // Import ViewTransitions
import Header from '../components/Header.astro'; // Import the new Header component
import Footer from '../components/Footer.astro'; // Import the new Footer component
import ThemeToggleButton from '../components/ThemeToggleButton.astro';
import CustomCursor from '../components/CustomCursor.jsx';
import 'aos/dist/aos.css'; // Import AOS styles

interface Props {
	title: string;
	description?: string;
}

const { title, description = 'Iftekhar - Personal Portfolio' } = Astro.props;
---
<!doctype html>
<html lang="en" class="scroll-smooth">
	<head>
		<meta charset="UTF-8" />
		<meta name="description" content={description} />
		<meta name="viewport" content="width=device-width, initial-scale=1" /> {/* Ensure responsiveness */}
		<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
		<meta name="generator" content={Astro.generator} />
		{/* Preconnect/Preload fonts if needed for performance */}
		<link rel="preconnect" href="https://fonts.googleapis.com">
		<link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
    {/* Updated font imports to use @fontsource packages specified in global.css and avoid duplicate Google Fonts links */}
		{/* <link href="https://fonts.googleapis.com/css2?family=Inter:wght@100..900&family=Satoshi:wght@400;500;700&display=swap" rel="stylesheet"> */}
		<title>{title} | Iftekhar Rafi - Software Engineer</title> {/* Enhanced site title */}
		{/* Astro View Transitions for page transitions */}
		<ViewTransitions fallback="animate" />
		{/* Inline script for immediate theme application to prevent FOUC */}
		<script is:inline>
      const STORAGE_KEY = 'theme-preference'; // Match the key used in theme-toggle.js
      const getInitialTheme = () => {
        try {
          const storedPref = localStorage.getItem(STORAGE_KEY);
          if (storedPref) {
            return storedPref;
          }
        } catch (e) {
          console.warn('Accessing localStorage failed, falling back to system preference.');
          // Fallback or handle error appropriately
        }
        // Fallback to system preference if no stored preference or if localStorage fails
        return window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light';
      };
      const theme = getInitialTheme();
      document.documentElement.setAttribute('data-theme', theme);
      if (theme === 'dark') {
        document.documentElement.classList.add('dark');
      } else {
        document.documentElement.classList.remove('dark');
      }
		</script>
    <script is:inline>
      // AOS Initialization
      // It's important to initialize AOS after the DOM is ready
      // and potentially after Astro's view transitions have completed if animations conflict.
      // For now, we'll initialize on page load.
      document.addEventListener('astro:page-load', () => {
        if (typeof AOS !== 'undefined') {
          AOS.init({
            duration: 800, // values from 0 to 3000, with step 50ms
            easing: 'ease-in-out-quad', // default easing for AOS animations
            once: true, // whether animation should happen only once - while scrolling down
            mirror: false, // whether elements should animate out while scrolling past them
            anchorPlacement: 'top-bottom', // defines which position of the element regarding to window should trigger the animation
          });
        }
      });
    </script>
	</head>
	<body class="bg-bg-base-current text-text-base-current flex flex-col min-h-screen font-primary selection:bg-primary-500 selection:text-white">
    <CustomCursor client:only="jsx" />
		<Header />
    {/* New Layout Structure: Main Content Area */}
		<main id="main-content" class="flex-grow container mx-auto px-4 sm:px-6 lg:px-8 py-8 md:py-12">
			{/* Optional Sidebar can be added here if a page needs it */}
			<slot />
		</main>
		<Footer /> {/* Use the new Footer component */}
		{/* Script to update dynamic timestamp */}
		<script is:inline>
			document.addEventListener('DOMContentLoaded', () => {
				const timestampSpan = document.getElementById('last-updated-timestamp');
				if (timestampSpan) {
					const now = new Date();
					const options = { year: 'numeric', month: 'long', day: 'numeric' };
					timestampSpan.textContent = now.toLocaleDateString(undefined, options);
				}
			});
		</script>
		{/* Deferred script for theme toggle functionality */}
		<script src="/scripts/theme-toggle.js" defer></script> {/* Load deferred */}
    <script src="/scripts/aos.js" defer></script> {/* Load AOS script deferred */}
		{/* Script for Astro View Transitions class toggling */}
		<script is:inline>
			document.addEventListener('astro:page-load', () => {
				document.documentElement.classList.remove('is-animating');
			});
			document.addEventListener('astro:before-swap', (e) => {
				document.documentElement.classList.add('is-animating');
			});
		</script>
		{/* Script for subtle button click microinteraction */}
		<script is:inline>
			document.addEventListener('click', (event) => {
				const button = event.target.closest('button, a.btn');
				if (button) {
					button.classList.add('active-pulse');
					button.addEventListener('animationend', () => {
						button.classList.remove('active-pulse');
					}, { once: true });
				}
			});
		</script>
	</body>
</html>