---
/**
 * Base layout component for all pages (Visually Enhanced)
 *
 * @module BaseLayout
 * @description Provides the common structure for all pages. This version includes
 * custom page transitions and a scroll-driven header effect.
 */
import '../styles/global.css';
import { ViewTransitions } from 'astro:transitions';
import Header from '../components/Header.astro';
import Footer from '../components/Footer.astro';
import CustomCursor from '../components/CustomCursor.jsx';
import 'aos/dist/aos.css';

interface Props {
    title: string;
    description?: string;
    lastUpdated?: Date;
    withGradientBackground?: boolean;
}

const {
    title,
    description = 'Iftekhar - Personal Portfolio',
    lastUpdated,
    withGradientBackground = false,
} = Astro.props;
---

<!doctype html>
<html lang="en" class="scroll-smooth">
    <head>
        <meta charset="UTF-8" />
        <meta name="description" content={description} />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
        <meta name="generator" content={Astro.generator} />
        <title>{title} | Iftekhar Rafi - Software Engineer</title>

        <!-- Google Fonts -->
        <link rel="preconnect" href="https://fonts.googleapis.com" />
        <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
        <link
            href="https://fonts.googleapis.com/css2?family=Inter:wght@400;700&family=Satoshi:wght@400;500;700&display=swap"
            rel="stylesheet"
        />

        <!-- Astro View Transitions for smooth page navigation -->
        <ViewTransitions fallback="animate" />

        <!-- Correct Theme Manager Script -->
        <script is:inline>
            const getTheme = () => {
                if (typeof localStorage !== 'undefined' && localStorage.getItem('theme')) {
                    return localStorage.getItem('theme');
                }
                if (window.matchMedia('(prefers-color-scheme: dark)').matches) {
                    return 'dark';
                }
                return 'light';
            };
            const theme = getTheme();
            if (theme === 'dark') {
                document.documentElement.classList.add('dark');
            } else {
                document.documentElement.classList.remove('dark');
            }
        </script>

        <!-- Inline styles for page transitions and scroll effects -->
        <style>
            /* --- 1. Custom View Transition Animation (Slide + Fade) --- */
            ::view-transition-old(root) {
                animation: slide-and-fade 0.4s ease-out;
            }
            ::view-transition-new(root) {
                animation: slide-from-right-and-fade 0.4s ease-in;
            }

            @keyframes slide-and-fade {
                from { transform: translateX(0); opacity: 1; }
                to { transform: translateX(-10%); opacity: 0; }
            }

            @keyframes slide-from-right-and-fade {
                from { transform: translateX(10%); opacity: 0; }
                to { transform: translateX(0); opacity: 1; }
            }

            /* --- 2. Scroll-Driven Header Styles (Theme-Aware) --- */
            header {
                /* Ensures a smooth transition for the background and shadow */
                transition: background-color 0.3s ease, box-shadow 0.3s ease, border-color 0.3s ease;
            }
            
            header.scrolled {
                backdrop-filter: blur(10px);
                -webkit-backdrop-filter: blur(10px); /* For Safari */
                box-shadow: 0 4px 6px hsl(var(--color-background) / 0.1);
                border-bottom-color: transparent;
            }

            /* Light mode scrolled background */
            header.scrolled {
                background-color: hsl(var(--color-background) / 0.8);
            }
            /* Dark mode scrolled background */
            .dark header.scrolled {
                background-color: hsl(var(--color-background) / 0.6);
            }
        </style>
    </head>

    <body class:list={[
        { 'with-gradient-background': withGradientBackground }
    ]}>
        <CustomCursor client:load />
        <Header />

        <main
            id="main-content"
            class="mx-auto w-full max-w-screen-2xl flex-grow px-6 py-16 sm:px-8 md:py-20 lg:px-12"
        >
            <slot />
        </main>

        <Footer {lastUpdated} />

        <!-- External script for Animate on Scroll library -->
        <script src="/scripts/aos.js" defer></script>
        
        <!-- Script to initialize animations and interactions -->
        <script>
            declare const AOS: any;

            // Function to handle scroll-driven header style changes
            const handleScroll = () => {
                const header = document.querySelector('header');
                if (header) {
                    header.classList.toggle('scrolled', window.scrollY > 50);
                }
            };
            
            // This master function runs on initial load and after every page transition
            const runPageScripts = () => {
                // Initialize AOS (Animate on Scroll)
                if (typeof AOS !== 'undefined') {
                    AOS.init({
                        duration: 800,
                        once: true,
                    });
                }
                
                // Add scroll listener for the header effect
                window.addEventListener('scroll', handleScroll, { passive: true });
            };
            
            // --- Event Listeners ---
            document.addEventListener('astro:page-load', runPageScripts);
            
            document.addEventListener('astro:before-swap', () => {
                // Clean up scroll listener before page swaps to prevent duplicates
                window.removeEventListener('scroll', handleScroll);
            });
        </script>
    </body>
</html>
