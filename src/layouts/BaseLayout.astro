---
// src/layouts/BaseLayout.astro
import '../styles/global.css'; // Import global styles
import { ViewTransitions } from 'astro:transitions'; // Import ViewTransitions
import Header from '../components/Header.astro'; // Import the new Header component
import ThemeToggleButton from '../components/ThemeToggleButton.astro';

// Define props the layout accepts, e.g., title
interface Props {
	title: string;
	description?: string;
}

const { title, description = 'Iftekhar - Personal Portfolio' } = Astro.props;
---
<!doctype html>
<html lang="en"> {/* Remove default data-theme here, let the script handle it */}
	<head>
		<meta charset="UTF-8" />
		<meta name="description" content={description} />
		<meta name="viewport" content="width=device-width, initial-scale=1" /> {/* Ensure responsiveness */}
		<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
		<meta name="generator" content={Astro.generator} />
		{/* Preconnect/Preload fonts if needed for performance */}
		<link rel="preconnect" href="https://fonts.googleapis.com">
		<link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
		<link href="https://fonts.googleapis.com/css2?family=Inter:wght@100..900&family=Satoshi:wght@400;500;700&display=swap" rel="stylesheet">
		<title>{title} | Iftekhar - Personal Portfolio</title> {/* Add site title suffix */}
		{/* Astro View Transitions for page transitions */}
		<ViewTransitions fallback="animate" />
		{/* Inline script for immediate theme application to prevent FOUC */}
		<script is:inline>
      const getInitialTheme = () => {
        try {
          const storedPref = localStorage.getItem('theme-preference');
          if (storedPref) return storedPref;
        } catch (e) {
          // localStorage might be disabled or inaccessible
          console.warn('Could not access localStorage for theme preference.');
        }
        // Fallback to system preference
        return window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light';
      };
      const theme = getInitialTheme();
      document.documentElement.setAttribute('data-theme', theme);
      if (theme === 'dark') {
        document.documentElement.classList.add('dark');
      } else {
        document.documentElement.classList.remove('dark');
      }
		</script>
	</head>
	<body>
		{/* Skip link for accessibility */}
		<a href="#main-content" class="skip-link">Skip to main content</a>
		<Header /> {/* Use the new Header component */}
		{/* <header>
			<div class="container">
			</div>
		</header> */}
		<main id="main-content"> {/* Add id for skip links */}
			<slot /> {/* Use slot for page content */}
		</main>
		{/* <Footer /> */} {/* Placeholder */}
		<footer>
			<div class="container">
				<p>&copy; {new Date().getFullYear()} Iftekhar - Personal Portfolio</p>
				<p>Site Last Updated: <span id="last-updated-timestamp"></span></p>
			</div>
		</footer>
		{/* Script to update dynamic timestamp */}
		<script is:inline>
			document.addEventListener('DOMContentLoaded', () => {
				const timestampSpan = document.getElementById('last-updated-timestamp');
				if (timestampSpan) {
					const now = new Date();
					const options = { year: 'numeric', month: 'long', day: 'numeric' };
					timestampSpan.textContent = now.toLocaleDateString(undefined, options);
				}
			});
		</script>
		{/* Deferred script for theme toggle functionality */}
		<script src="/scripts/theme-toggle.js" defer></script> {/* Load deferred */}
		{/* Script for Astro View Transitions class toggling */}
		<script is:inline>
			document.addEventListener('astro:page-load', () => {
				document.documentElement.classList.remove('is-animating');
			});
			document.addEventListener('astro:before-swap', (e) => {
				document.documentElement.classList.add('is-animating');
			});
		</script>
		{/* Script for subtle button click microinteraction */}
		<script is:inline>
			document.addEventListener('click', (event) => {
				const button = event.target.closest('button, a.btn');
				if (button) {
					button.classList.add('active-pulse');
					button.addEventListener('animationend', () => {
						button.classList.remove('active-pulse');
					}, { once: true });
				}
			});
		</script>
	</body>
</html>